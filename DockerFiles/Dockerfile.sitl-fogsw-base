# FOG SW BUILDER
# There should not be need to publish this builder image anywhere
FROM ubuntu:20.04 as fogsw_builder

# Setup timezone
RUN echo 'Etc/UTC' > /etc/timezone \
    && ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime \
    && apt-get update && apt-get install -q -y tzdata \
    && rm -rf /var/lib/apt/lists/*

ENV LANG C.UTF-8
ENV LANGUAGE C.UTF-8
ENV LC_ALL C.UTF-8

# Install ROS 2
RUN apt-get update -y && apt-get install -y --no-install-recommends \
    curl \
    gnupg2 \
    lsb-release \
    && rm -rf /var/lib/apt/lists/*

RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
RUN echo "deb [arch=$(dpkg --print-architecture)] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros2-latest.list

# Install build dependencies
RUN apt-get update -y && apt-get install -y --no-install-recommends \
    build-essential \
    dh-make debhelper \
    fakeroot \
    git-core \
    golang \
    libasio-dev \
    openjdk-11-jdk-headless \
    openssh-client \
    python3-bloom \
    python3-colcon-common-extensions \
    python3-pip \
    python3-future \
    python3-genmsg \
    ros-foxy-ros-base \
    && rm -rf /var/lib/apt/lists/*

RUN curl -fsSL https://github.com/mavlink/MAVSDK/releases/download/v0.34.0/mavsdk_0.34.0_ubuntu20.04_amd64.deb -o mavsdk_0.34.0_ubuntu20.04_amd64.deb \
    && dpkg -i mavsdk_0.34.0_ubuntu20.04_amd64.deb \
    && rm mavsdk_0.34.0_ubuntu20.04_amd64.deb

RUN mkdir -p /fastrtps
WORKDIR /fastrtps

RUN git clone --depth 1 --branch v1.0.4 https://github.com/eProsima/Fast-RTPS-Gen.git Fast-RTPS-Gen \
    && cd Fast-RTPS-Gen \
    && git submodule update --init --recursive

RUN git clone --depth 1 --branch v1.8.2 https://github.com/eProsima/Fast-RTPS.git FastRTPS-1.8.2 \
    && cd FastRTPS-1.8.2 \
    && git submodule update --init --recursive

# Build fastrtpsgen
RUN cd Fast-RTPS-Gen \
    && ./gradlew build -x test \
    && mkdir -p /usr/bin/ \
    && mkdir -p /usr/share/fastrtpsgen/java/ \
    && cp build/libs/fastrtpsgen.jar /usr/share/fastrtpsgen/java/fastrtpsgen.jar \
    && cp scripts/fastrtpsgen /usr/bin/fastrtpsgen

# Build and install fastRTPS lib
RUN cd FastRTPS-1.8.2 \
    && mkdir build \
    && cd build \
    && cmake ../ -DTHIRDPARTY=ON \
    && make install

WORKDIR /

# Copy repository contents
COPY fog_sw fog_sw

# install tools
RUN cd fog_sw/tools \
    && dpkg -i fastrtps*.deb

# setup build
RUN cd fog_sw/ \
    && ./build_setup.sh

# create debian packages
RUN cd fog_sw/packaging/agent_protocol_splitter \
    && . /opt/ros/foxy/setup.sh \
    && ./package.sh

RUN cd fog_sw/packaging/mavlink-router \
    && . /opt/ros/foxy/setup.sh \
    && ./package.sh

RUN cd fog_sw/ros2_ws/src/px4_msgs \
    && . /opt/ros/foxy/setup.sh \
    && bloom-generate rosdebian --os-name ubuntu --os-version focal --ros-distro foxy \
    && fakeroot debian/rules binary \
    && mv ../*.deb ../../../packaging/

RUN cd fog_sw/ros2_ws/src/px4_mavlink_ctrl \
    && . /opt/ros/foxy/setup.sh \
    && bloom-generate rosdebian --os-name ubuntu --os-version focal --ros-distro foxy \
    && sed -i 's/^\tdh_shlibdeps.*/& --dpkg-shlibdeps-params=--ignore-missing-info/g' debian/rules \
    && fakeroot debian/rules binary \
    && mv ../*.deb ../../../packaging/

RUN cd fog_sw/ros2_ws/src/px4_ros_com \
    && . /opt/ros/foxy/setup.sh \
    && export CMAKE_PREFIX_PATH=/fog_sw/ros2_ws/src/px4_msgs/debian/ros-foxy-px4-msgs/opt/ros/foxy \
    && bloom-generate rosdebian --os-name ubuntu --os-version focal --ros-distro foxy \
    && fakeroot debian/rules binary \
    && mv ../*.deb ../../../packaging/

# Bare bones image containing only the build results
# This image can be used for retrieving relevant px4 firmware artifacts
FROM scratch
# Copy only relevant artifacts from builder stage
COPY --from=fogsw_builder /fog_sw/packaging/*.deb         /packages/
